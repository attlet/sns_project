람다 함수

- 익명 함수를 지칭, 즉 이름이 없는 함수로, 함수형 프로그래밍 패러다임에서 이 람다 함수를 변수나 함수 매개변수로 전달하는 등, 하나의 값처럼 사용된다.

- 코틀린에서 람다 함수 호출은 프로그램의 기본 구성 요소를 호출하는 것과 비슷한 성능으로, 추가적인 부가 비용이 들지 않는다.



- 코틀린에서는 함수 호출 시 맨 마지막 매개변수가 람다식이라면 밖으로 뺄 수 있다.

ex)

people.maxBy({people : People -> people.age })

-> people.maxBy{people : People -> people.age }



- 람다식을 변수에 저장할 때는 파라미터 타입 추론이 되지 않아 파라미터 타입을 명시해야한다.

ex)

 val lamda = {  it.age }              (x)
 val lamda = { p : Persion -> p.age } (o)




컬렉션 함수형 api


- count와 size에 대해서

컬렉션 필터링한 크기를 구할 때, count를 사용하는 게 size 보다 효율적인 경우가 있다.

people.count(lamdafunction)  --> 조건을 만족하는 people 리스트 원소 개수만 추적.
people.filter(lamdafunction).size --> 조건을 만족하는 원소들을 저장하는 컬렉션이 추가로 발생.





