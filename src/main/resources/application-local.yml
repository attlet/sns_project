spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3307/sns_project
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  profiles: dev
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    queue: notification_queue
    exchange: notification_exchange
    routing_key: notification_key

  notification:
    broker: rabbitmq

#  kafka:
#    bootstrap-servers: localhost:9092  # Kafka 브로커 주소
#    consumer:
#      group-id: sns-group  # 컨슈머 그룹 ID
#      auto-offset-reset: earliest  # 메시지를 처음부터 소비할지에 대한 설정 (처음 구독시 유용)
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: '*'  # 수신된 JSON 메시지를 처리할 수 있도록 패키지를 신뢰하도록 설정
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#    template:
#      default-topic: sns-notifications  # 기본 토픽 이름 설정

logging:
  level:
    org:
      springframework.security: DEBUG
      hibernate:
        SQL : DEBUG
        type:
          descriptor:
            sql: trace

#로컬에 이미지 저장
file:
  storage-type: local
  profile-images-dir: ./uploads/profile_images
  posting-images-dir: ./uploads/posting_images

jwt:
  secret: secretKey-for-authorization-jwtToken
  expiration: 3600000  #60 * 60 * 1000 ms